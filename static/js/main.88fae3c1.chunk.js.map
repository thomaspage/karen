{"version":3,"sources":["Recorder.js","App.js","serviceWorker.js","index.js"],"names":["_assertThisInitialized","self","ReferenceError","RecordState","Object","freeze","START","PAUSE","STOP","NONE","AudioReactRecorder","_React$Component","subClass","superClass","props","_this","call","this","init","leftchannel","rightchannel","recorder","recording","recordingLength","volume","audioInput","sampleRate","AudioContext","window","webkitAudioContext","context","analyser","canvas","canvasRef","current","canvasCtx","getContext","stream","tested","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","Promise","resolve","e","reject","getStream","constraints","audio","video","mediaDevices","setUpRecording","createGain","createMediaStreamSource","createAnalyser","connect","createScriptProcessor","destination","onaudioprocess","left","inputBuffer","getChannelData","right","reduce","a","b","console","log","stop","getTracks","forEach","track","push","Float32Array","visualize","mergeBuffers","channelBuffer","result","offset","lng","length","i","buffer","set","interleave","leftChannel","rightChannel","inputIndex","index","writeUTFBytes","view","string","setUint8","charCodeAt","_this$props","backgroundColor","foregroundColor","WIDTH","width","HEIGHT","height","CENTERX","CENTERY","fftSize","bufferLength","dataArray","Uint8Array","clearRect","draw","drawVisual","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","straightLine","every","point","y","v","multiplier","Math","pow","moveTo","lineTo","stroke","setupMic","_temp3","_temp4","body","recover","then","_catch","_this$getStream","err","start","_this$props2","onStop","type","closeMic","leftBuffer","rightBuffer","interleaved","ArrayBuffer","DataView","setUint32","setUint16","setInt16","blob","Blob","audioUrl","URL","createObjectURL","url","pause","resume","getAudioTracks","disconnect","React","createRef","prototype","create","constructor","__proto__","_proto","componentDidMount","componentDidUpdate","prevProps","prevState","state","checkState","previousState","doIfState","cb","componentWillUnmount","render","_this$props3","canvasWidth","canvasHeight","createElement","className","ref","Component","defaultProps","App","_Component","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","setState","recordState","innerWidth","innerHeight","audioData","_inherits","_createClass","key","value","_this$state","style","onClick","Boolean","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88fae3c1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n\n// Asynchronously call a function and send errors to recovery continuation\nfunction _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\nvar RecordState = Object.freeze({\n  START: 'start',\n  PAUSE: 'pause',\n  STOP: 'stop',\n  NONE: 'none'\n});\n\nvar AudioReactRecorder = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AudioReactRecorder, _React$Component);\n\n  function AudioReactRecorder(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.init = function () {\n      try {\n        _this.leftchannel = [];\n        _this.rightchannel = [];\n        _this.recorder = null;\n        _this.recording = false;\n        _this.recordingLength = 0;\n        _this.volume = null;\n        _this.audioInput = null;\n        _this.sampleRate = null;\n        _this.AudioContext = window.AudioContext || window.webkitAudioContext;\n        _this.context = null;\n        _this.analyser = null;\n        _this.canvas = _this.canvasRef.current;\n        _this.canvasCtx = _this.canvas.getContext('2d');\n        _this.stream = null;\n        _this.tested = false;\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    _this.getStream = function (constraints) {\n      if (!constraints) {\n        constraints = {\n          audio: true,\n          video: false\n        };\n      }\n\n      return navigator.mediaDevices.getUserMedia(constraints);\n    };\n\n    _this.setUpRecording = function () {\n      _this.context = new _this.AudioContext();\n      _this.sampleRate = _this.context.sampleRate;\n      _this.volume = _this.context.createGain();\n      _this.audioInput = _this.context.createMediaStreamSource(_this.stream);\n      _this.analyser = _this.context.createAnalyser();\n\n      _this.audioInput.connect(_this.analyser);\n\n      var bufferSize = 2048;\n      _this.recorder = _this.context.createScriptProcessor(bufferSize, 2, 2);\n\n      _this.analyser.connect(_this.recorder);\n\n      _this.recorder.connect(_this.context.destination);\n\n      var self = _assertThisInitialized(_this);\n\n      _this.recorder.onaudioprocess = function (e) {\n        if (!self.recording) return;\n        var left = e.inputBuffer.getChannelData(0);\n        var right = e.inputBuffer.getChannelData(1);\n\n        if (!self.tested) {\n          self.tested = true;\n\n          if (!left.reduce(function (a, b) {\n            return a + b;\n          })) {\n            console.log('Error: There seems to be an issue with your Mic');\n            self.stop();\n            self.stream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n          }\n        }\n\n        self.leftchannel.push(new Float32Array(left));\n        self.rightchannel.push(new Float32Array(right));\n        self.recordingLength += bufferSize;\n      };\n\n      _this.visualize();\n    };\n\n    _this.mergeBuffers = function (channelBuffer, recordingLength) {\n      var result = new Float32Array(recordingLength);\n      var offset = 0;\n      var lng = channelBuffer.length;\n\n      for (var i = 0; i < lng; i++) {\n        var buffer = channelBuffer[i];\n        result.set(buffer, offset);\n        offset += buffer.length;\n      }\n\n      return result;\n    };\n\n    _this.interleave = function (leftChannel, rightChannel) {\n      var length = leftChannel.length + rightChannel.length;\n      var result = new Float32Array(length);\n      var inputIndex = 0;\n\n      for (var index = 0; index < length;) {\n        result[index++] = leftChannel[inputIndex];\n        result[index++] = rightChannel[inputIndex];\n        inputIndex++;\n      }\n\n      return result;\n    };\n\n    _this.writeUTFBytes = function (view, offset, string) {\n      var lng = string.length;\n\n      for (var i = 0; i < lng; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n\n    _this.visualize = function () {\n      var _this$props = _this.props,\n          backgroundColor = _this$props.backgroundColor,\n          foregroundColor = _this$props.foregroundColor;\n      _this.WIDTH = _this.canvas.width;\n      _this.HEIGHT = _this.canvas.height;\n      _this.CENTERX = _this.canvas.width / 2;\n      _this.CENTERY = _this.canvas.height / 2;\n      if (!_this.analyser) return;\n      _this.analyser.fftSize = 512;\n      var bufferLength = _this.analyser.fftSize;\n      var dataArray = new Uint8Array(bufferLength);\n\n      _this.canvasCtx.clearRect(0, 0, _this.WIDTH, _this.HEIGHT);\n\n      var self = _assertThisInitialized(_this);\n\n      var draw = function draw() {\n        self.drawVisual = requestAnimationFrame(draw);\n        self.analyser.getByteTimeDomainData(dataArray);\n        self.canvasCtx.fillStyle = backgroundColor;\n        self.canvasCtx.fillRect(0, 0, self.WIDTH, self.HEIGHT);\n        self.canvasCtx.lineWidth = 4;\n        self.canvasCtx.strokeStyle = foregroundColor;\n        self.canvasCtx.beginPath();\n        var sliceWidth = self.WIDTH * 1.0 / bufferLength;\n        var x = 0;\n\n        var straightLine = dataArray.every(point => point < 132)\n        \n        for (var i = 0; i < bufferLength; i++) {\n        //   var multiplier = Math.abs((i - bufferLength / 2) / bufferLength)\n            var y\n          if (straightLine) {\n            y = self.HEIGHT / 2\n          } else {\n            var v = dataArray[i] / 128.0;\n\n            var multiplier = - 2 * (i**3) * (i - bufferLength)**3 / ((bufferLength / 2) ** 6)\n  \n            // v = [0.9, 1, 1.1]\n            y = multiplier * v * self.HEIGHT / 2 + (self.HEIGHT / 2 - multiplier * self.HEIGHT / 2)\n  \n          }\n\n          if (i === 0) {\n            self.canvasCtx.moveTo(x, y);\n          } else {\n            self.canvasCtx.lineTo(x, y);\n          }\n\n          x += sliceWidth;\n        }\n\n        self.canvasCtx.lineTo(self.canvas.width, self.canvas.height / 2);\n        self.canvasCtx.stroke();\n      };\n\n      draw();\n    };\n\n    _this.setupMic = function () {\n      try {\n        var _temp3 = function _temp3() {\n          _this.setUpRecording();\n        };\n\n        var _temp4 = _catch(function () {\n          return Promise.resolve(_this.getStream()).then(function (_this$getStream) {\n            window.stream = _this.stream = _this$getStream;\n          });\n        }, function (err) {\n          console.log('Error: Issue getting mic', err);\n        });\n\n        return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    _this.start = function () {\n      try {\n        return Promise.resolve(_this.setupMic()).then(function () {\n          _this.recording = true;\n          _this.leftchannel.length = _this.rightchannel.length = 0;\n          _this.recordingLength = 0;\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    _this.stop = function () {\n      var _this$props2 = _this.props,\n          onStop = _this$props2.onStop,\n          type = _this$props2.type;\n      _this.recording = false;\n\n      _this.closeMic();\n\n      _this.leftBuffer = _this.mergeBuffers(_this.leftchannel, _this.recordingLength);\n      _this.rightBuffer = _this.mergeBuffers(_this.rightchannel, _this.recordingLength);\n\n      var interleaved = _this.interleave(_this.leftBuffer, _this.rightBuffer);\n\n      var buffer = new ArrayBuffer(44 + interleaved.length * 2);\n      var view = new DataView(buffer);\n\n      _this.writeUTFBytes(view, 0, 'RIFF');\n\n      view.setUint32(4, 44 + interleaved.length * 2, true);\n\n      _this.writeUTFBytes(view, 8, 'WAVE');\n\n      _this.writeUTFBytes(view, 12, 'fmt ');\n\n      view.setUint32(16, 16, true);\n      view.setUint16(20, 1, true);\n      view.setUint16(22, 2, true);\n      view.setUint32(24, _this.sampleRate, true);\n      view.setUint32(28, _this.sampleRate * 4, true);\n      view.setUint16(32, 4, true);\n      view.setUint16(34, 16, true);\n\n      _this.writeUTFBytes(view, 36, 'data');\n\n      view.setUint32(40, interleaved.length * 2, true);\n      var lng = interleaved.length;\n      var index = 44;\n      var volume = 1;\n\n      for (var i = 0; i < lng; i++) {\n        view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\n        index += 2;\n      }\n\n      var blob = new Blob([view], {\n        type: type\n      });\n      var audioUrl = URL.createObjectURL(blob);\n      onStop && onStop({\n        blob: blob,\n        url: audioUrl,\n        type: type\n      });\n    };\n\n    _this.pause = function () {\n      _this.recording = false;\n\n      _this.closeMic();\n    };\n\n    _this.resume = function () {\n      _this.setupMic();\n\n      _this.recording = true;\n    };\n\n    _this.closeMic = function () {\n      _this.stream.getAudioTracks().forEach(function (track) {\n        track.stop();\n      });\n\n      _this.audioInput.disconnect(0);\n\n      _this.analyser.disconnect(0);\n\n      _this.recorder.disconnect(0);\n    };\n\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  var _proto = AudioReactRecorder.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.init();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var state = this.props.state;\n    this.checkState(prevProps.state, state);\n  };\n\n  _proto.checkState = function checkState(previousState) {\n    switch (previousState) {\n      case RecordState.START:\n        this.doIfState(RecordState.PAUSE, this.pause);\n        this.doIfState(RecordState.STOP, this.stop);\n        break;\n\n      case RecordState.PAUSE:\n        this.doIfState(RecordState.START, this.resume);\n        this.doIfState(RecordState.STOP, this.stop);\n        break;\n\n      case RecordState.STOP:\n        this.doIfState(RecordState.START, this.start);\n        break;\n\n      default:\n        this.doIfState(RecordState.START, this.start);\n        break;\n    }\n  };\n\n  _proto.doIfState = function doIfState(state, cb) {\n    if (this.props.state === state) {\n      cb && cb();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {};\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        canvasWidth = _this$props3.canvasWidth,\n        canvasHeight = _this$props3.canvasHeight;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-react-recorder\"\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      className: \"audio-react-recorder__canvas\"\n    }));\n  };\n\n  return AudioReactRecorder;\n}(React.Component);\n\nAudioReactRecorder.propTypes = {\n  state: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n  foregroundColor: PropTypes.string,\n  canvasWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  canvasHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onStop: PropTypes.func\n};\nAudioReactRecorder.defaultProps = {\n  state: RecordState.NONE,\n  type: 'audio/wav',\n  backgroundColor: 'rgb(200, 200, 200)',\n  foregroundColor: 'rgb(0, 0, 0)',\n  canvasWidth: 500,\n  canvasHeight: 300\n};\n\nexport default AudioReactRecorder;\nexport { RecordState };\n//# sourceMappingURL=index.modern.js.map\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport AudioReactRecorder, { RecordState } from './Recorder'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      recordState: null,\n      canvasWidth: 500,\n      canvasHeight: 300,\n    }\n  }\n\n  componentDidMount = () => {\n\n    this.setState({\n      recordState: RecordState.START,\n      canvasWidth: window.innerWidth,\n      canvasHeight: window.innerHeight,\n    })\n\n  }\n\n  start = () => {\n    this.setState({\n      recordState: RecordState.START\n    })\n  }\n\n  stop = () => {\n    this.setState({\n      recordState: RecordState.STOP\n    })\n  }\n\n  //audioData contains blob and blobUrl\n  onStop = (audioData) => {\n    this.setState({\n      recordState: RecordState.STOP\n    })\n  }\n\n  render() {\n    const { canvasHeight, canvasWidth, recordState } = this.state\n\n    const backgroundColor = \"rgb(15,18,23)\"\n\n    return (\n      <div\n        style={{\n          backgroundColor,\n        }}\n      >\n        <AudioReactRecorder\n          canvasHeight={canvasHeight}\n          canvasWidth={canvasWidth}\n          backgroundColor={backgroundColor}\n          foregroundColor=\"rgb(185,215,124)\"\n          state={recordState}\n          onStop={this.onStop}\n        />\n\n        <button onClick={this.start}>Start</button>\n        <button onClick={this.stop}>Stop</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}